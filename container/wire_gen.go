// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package container

import (
	"be-arimbi/internal/features/auth"
	"be-arimbi/internal/features/role"
	"be-arimbi/internal/features/user"
	"github.com/google/wire"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitApp(db *gorm.DB) *AppContainer {
	authRepository := auth.NewAuthRepository(db)
	userRepository := user.NewUserRepository(db)
	roleRepository := role.NewRoleRepository(db)
	authService := auth.NewAuthService(authRepository, userRepository, roleRepository)
	authHandler := auth.NewAuthHandler(authService)
	roleService := role.NewRoleService(roleRepository)
	roleHandler := role.NewRoleHandler(roleService)
	userService := user.NewUserService(userRepository)
	userHandler := user.NewUserHandler(userService)
	appContainer := &AppContainer{
		AuthHandler: authHandler,
		RoleHandler: roleHandler,
		UserHandler: userHandler,
	}
	return appContainer
}

// wire.go:

var roleSet = wire.NewSet(role.NewRoleRepository, role.NewRoleService, role.NewRoleHandler)

var authSet = wire.NewSet(auth.NewAuthRepository, auth.NewAuthService, auth.NewAuthHandler)

var userSet = wire.NewSet(user.NewUserRepository, user.NewUserService, user.NewUserHandler)
